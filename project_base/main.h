// Copyright (c) 2015-16, Joe Krachey
// All rights reserved.
//
// Redistribution and use in source or binary form, with or without modification, 
// are permitted provided that the following conditions are met:
//
// 1. Redistributions in source form must reproduce the above copyright 
//    notice, this list of conditions and the following disclaimer in 
//    the documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#ifndef __MAIN_H__
#define __MAIN_H__

#include <stdio.h>
#include <stdint.h>
#include <string.h>

#include "TM4C123.h"

extern void serialDebugInit(void);


// 
//  Image data for alien
// 

const uint8_t alienBitmap[] =
{
	0x01, 0x81, 0x80, //        ##      ##       
	0x03, 0x81, 0xC0, //       ###      ###      
	0x67, 0x00, 0xE6, //  ##  ###        ###  ## 
	0x66, 0x00, 0x66, //  ##  ##          ##  ## 
	0x67, 0xFF, 0xE6, //  ##  ##############  ## 
	0x77, 0xFF, 0xEE, //  ### ############## ### 
	0x7F, 0xFF, 0xFE, //  ###################### 
	0x7F, 0xFF, 0xFE, //  ###################### 
	0x3E, 0x7E, 0x7C, //   #####  ######  #####  
	0x1E, 0x7E, 0x78, //    ####  ######  ####   
	0x0F, 0xFF, 0xF0, //     ################    
	0x07, 0xFF, 0xE0, //      ##############     
	0x01, 0x81, 0x80, //        ##      ##       
	0x01, 0x81, 0x80, //        ##      ##       
	0x00, 0x00, 0x00, //                         
};

// Bitmap sizes for alien
const uint8_t alienWidthPixels = 24;
const uint8_t alienHeightPixels = 15;



// 
//  Image data for alien2
// 

const uint8_t alien2Bitmap[] =
{
	0x66, 0x19, 0x80, //  ##  ##    ##  ## 
	0x7F, 0x3F, 0x80, //  #######  ####### 
	0x39, 0xE7, 0x00, //   ###  ####  ###  
	0x1F, 0xFE, 0x00, //    ############   
	0x0F, 0x3C, 0x00, //     ####  ####    
	0x76, 0x1B, 0x80, //  ### ##    ## ### 
	0x7F, 0xFF, 0x80, //  ################ 
	0x7F, 0xFF, 0x80, //  ################ 
	0x79, 0xE7, 0x80, //  ####  ####  #### 
	0x79, 0xE7, 0x80, //  ####  ####  #### 
	0x3F, 0xFF, 0x00, //   ##############  
	0x1F, 0xFE, 0x00, //    ############   
	0x0F, 0xFC, 0x00, //     ##########    
	0x07, 0xF8, 0x00, //      ########     
	0x03, 0xF0, 0x00, //       ######      
	0x01, 0xE0, 0x00, //        ####       
	0x00, 0x00, 0x00, //                   
};

// Bitmap sizes for alien2
const uint8_t alien2WidthPixels = 18;
const uint8_t alien2HeightPixels = 17;



// 
//  Image data for spaceship
// 

const uint8_t spaceshipBitmap[] =
{
	0x00, 0x00, 0x00, 0x00, //                            
	0x00, 0x00, 0x00, 0x00, //                            
	0x21, 0x8E, 0x30, 0x80, //   #    ##   ###   ##    #  
	0x31, 0x9F, 0x31, 0x80, //   ##   ##  #####  ##   ##  
	0x39, 0xBF, 0xB3, 0x80, //   ###  ## ####### ##  ###  
	0x3D, 0xFF, 0xF7, 0x80, //   #### ############# ####  
	0x3F, 0xDF, 0x7F, 0x80, //   ######## ##### ########  
	0x2F, 0xFF, 0xFE, 0x80, //   # ################### #  
	0x27, 0xFF, 0xFC, 0x80, //   #  #################  #  
	0x23, 0xFF, 0xF8, 0x80, //   #   ###############   #  
	0x22, 0xFF, 0xE8, 0x80, //   #   # ########### #   #  
	0x22, 0x6E, 0xC8, 0x80, //   #   #  ## ### ##  #   #  
	0x22, 0x71, 0xC8, 0x80, //   #   #  ###   ###  #   #  
	0x22, 0x71, 0xC8, 0x80, //   #   #  ###   ###  #   #  
	0x02, 0x3F, 0x88, 0x00, //       #   #######   #      
	0x02, 0x3F, 0x88, 0x00, //       #   #######   #      
	0x02, 0x3F, 0x88, 0x00, //       #   #######   #      
	0x00, 0x1F, 0x00, 0x00, //            #####           
	0x00, 0x1F, 0x00, 0x00, //            #####           
	0x00, 0x0E, 0x00, 0x00, //             ###            
	0x00, 0x0E, 0x00, 0x00, //             ###            
	0x00, 0x0E, 0x00, 0x00, //             ###            
	0x00, 0x0E, 0x00, 0x00, //             ###            
	0x00, 0x0E, 0x00, 0x00, //             ###            
	0x00, 0x04, 0x00, 0x00, //              #             
	0x00, 0x04, 0x00, 0x00, //              #             
	0x00, 0x04, 0x00, 0x00, //              #             
	0x00, 0x00, 0x00, 0x00, //                            
	0x00, 0x00, 0x00, 0x00, //                            
};

// Bitmap sizes for spaceship
const uint8_t spaceshipWidthPixels = 27;
const uint8_t spaceshipHeightPixels = 29;



// 
//  Image data for explosion
// 

const uint8_t explosionBitmap[] =
{
	0x06, 0x06, 0x00, //      ##      ##     
	0x07, 0x0E, 0x00, //      ###    ###     
	0x63, 0x9C, 0x60, //  ##   ###  ###   ## 
	0x71, 0x98, 0xE0, //  ###   ##  ##   ### 
	0x38, 0x01, 0xC0, //   ###          ###  
	0x1C, 0x03, 0x80, //    ###        ###   
	0x0E, 0x07, 0x00, //     ###      ###    
	0x06, 0x06, 0x00, //      ##      ##     
	0xE0, 0x00, 0x70, // ###              ###
	0xE0, 0x00, 0x70, // ###              ###
	0x06, 0x06, 0x00, //      ##      ##     
	0x0E, 0x07, 0x00, //     ###      ###    
	0x1C, 0x03, 0x80, //    ###        ###   
	0x38, 0x01, 0xC0, //   ###          ###  
	0x71, 0x98, 0xE0, //  ###   ##  ##   ### 
	0x63, 0x9C, 0x60, //  ##   ###  ###   ## 
	0x07, 0x0E, 0x00, //      ###    ###     
	0x06, 0x06, 0x00, //      ##      ##     
};

// Bitmap sizes for explosion
const uint8_t explosionWidthPixels = 20;
const uint8_t explosionHeightPixels = 18;



// 
//  Image data for bullet
// 

const uint8_t bulletBitmap[] =
{
	0x00, //   
	0x00, //   
	0xC0, // ##
	0xC0, // ##
	0xC0, // ##
	0xC0, // ##
};

// Bitmap sizes for bullet
const uint8_t bulletWidthPixels = 2;
const uint8_t bulletHeightPixels = 6;



// 
//  Image data for alienbullet
// 

const uint8_t alienbulletBitmap[] =
{
	0x30, //   ##  
	0x70, //  ###  
	0xE0, // ###   
	0xE0, // ###   
	0x70, //  ###  
	0x38, //   ### 
	0x1C, //    ###
	0x1C, //    ###
	0x38, //   ### 
	0x30, //   ##  
	0x00, //       
	0x00, //       
};

// Bitmap sizes for alienbullet
const uint8_t alienbulletWidthPixels = 6;
const uint8_t alienbulletHeightPixels = 12;




// 
//  Image data for start
// 

const uint8_t startBitmap[] =
{
	0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################   ########
	0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, // ##############################################################################################  ########
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, // ############################################################################################### ########
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFC, 0x0F, 0x80, 0xF8, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xFF, 0x01, 0xFF, // ######      #####       #####      ####      ####      ########      ###########       #################
	0xFF, 0xFC, 0x0F, 0xC0, 0xF8, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xFC, 0x01, 0xFF, // ######      ######      #####      ####      ####      ########      #########         #################
	0xFF, 0xFC, 0x0F, 0xC0, 0x78, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xF8, 0x01, 0xFF, // ######      ######       ####      ####      ####      ########      ########          #################
	0xFF, 0xFC, 0x0F, 0xC0, 0x78, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xF0, 0x01, 0xFF, // ######      ######       ####      ####      ####      ########      #######           #################
	0xFF, 0xFC, 0x0F, 0xE0, 0x38, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xF0, 0x01, 0xFF, // ######      #######       ###      ####      ####      ########      #######           #################
	0xFF, 0xFC, 0x0F, 0xE0, 0x38, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xE0, 0x01, 0xFF, // ######      #######       ###      ####      ##        ########      ######            #################
	0xFF, 0xFC, 0x0F, 0xF0, 0x18, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xE0, 0x1D, 0xFF, // ######      ########       ##      ####      ##        ########      ######        ### #################
	0xFF, 0xFC, 0x0F, 0xF0, 0x18, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xE0, 0x3F, 0xFF, // ######      ########       ##      ####      ##        ########      ######       ######################
	0xFF, 0xFC, 0x0F, 0xF0, 0x18, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xE0, 0x3F, 0xFF, // ######      ########       ##      ####      ##        ########      ######       ######################
	0xFF, 0xFC, 0x0F, 0xF0, 0x18, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xF0, 0x1F, 0xFF, // ######      ########       ##      ####      ##        ########      #######       #####################
	0xFF, 0xFC, 0x0F, 0xE0, 0x18, 0x1E, 0x06, 0x01, 0xFE, 0x07, 0xF0, 0x0F, 0xFF, // ######      #######        ##      ####      ##        ########      #######        ####################
	0xFF, 0xFC, 0x0F, 0xE0, 0x18, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xF8, 0x07, 0xFF, // ######      #######        ##      ####      ####      ########      ########        ###################
	0xFF, 0xFC, 0x0F, 0xC0, 0x18, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xFC, 0x03, 0xFF, // ######      ######         ##      ####      ####      ########      #########        ##################
	0xFF, 0xFC, 0x0F, 0xC0, 0xF8, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xFE, 0x03, 0xFF, // ######      ######      #####      ####      ####      ########      ##########       ##################
	0xFF, 0xFC, 0x0F, 0xC0, 0xF8, 0x1E, 0x07, 0x81, 0xFE, 0x07, 0xFE, 0x03, 0xFF, // ######      ######      #####      ####      ####      ########      ##########       ##################
	0xFF, 0xFC, 0x0F, 0xC0, 0xF8, 0x1E, 0x07, 0x01, 0xFE, 0x07, 0xFC, 0x03, 0xFF, // ######      ######      #####      ####      ###       ########      #########        ##################
	0xFF, 0x00, 0x00, 0x40, 0x00, 0x1E, 0x00, 0x01, 0x80, 0x00, 0x20, 0x03, 0xFF, //                  #                 ####                ##                 #           ##################
	0xFF, 0x00, 0x00, 0x40, 0x00, 0x1E, 0x00, 0x03, 0x80, 0x00, 0x20, 0x07, 0xFF, //                  #                 ####               ###                 #          ###################
	0xFF, 0x00, 0x00, 0x60, 0x00, 0x1F, 0x00, 0x03, 0x80, 0x00, 0x20, 0x07, 0xFF, //                  ##                #####              ###                 #          ###################
	0xFF, 0x00, 0x00, 0x70, 0x00, 0x1F, 0x00, 0x07, 0x80, 0x00, 0x20, 0x0F, 0xFF, //                  ###               #####             ####                 #         ####################
	0xFF, 0x00, 0x00, 0x78, 0x00, 0x1F, 0x80, 0x0F, 0x80, 0x00, 0x20, 0x1F, 0xFF, //                  ####              ######           #####                 #        #####################
	0xFF, 0x00, 0x00, 0x7E, 0x00, 0x1F, 0xE0, 0x3F, 0x80, 0x00, 0x20, 0x7F, 0xFF, //                  ######            ########       #######                 #      #######################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ########################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, // ############################################################################################### ########
	0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, // ##############################################################################################  ########
	0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################   ########
};

// Bitmap sizes for start
const uint8_t startWidthPixels = 104;
const uint8_t startHeightPixels = 38;




// 
//  Image data for scores
// 

const uint8_t scoresBitmap[] =
{
	0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, //    #######################################################################################################   
	0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, //   #########################################################################################################  
	0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, //  ########################################################################################################### 
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0x81, 0x80, 0x7C, 0x0F, 0x83, 0xFF, 0x01, 0xFF, 0xFE, 0x03, 0xFF, 0xE0, 0x78, // #########      ##        #####      #####     ##########       ################       #############      ####
	0xFF, 0x01, 0x80, 0x3C, 0x07, 0x83, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0xFF, 0xC0, 0x78, // ########       ##         ####       ####     ########           ############           ##########       ####
	0xFE, 0x01, 0x80, 0x1E, 0x07, 0x83, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0x80, 0x78, // #######        ##          ####      ####     #######             ##########              #######        ####
	0xFC, 0x01, 0x80, 0x0E, 0x03, 0x83, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0x00, 0x78, // ######         ##           ###       ###     #####                ########                #####         ####
	0xF8, 0x01, 0x80, 0x0F, 0x03, 0x83, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1E, 0x00, 0x78, // #####          ##           ####      ###     #####                 ######                 ####          ####
	0xF8, 0x0D, 0xFE, 0x0F, 0x03, 0x83, 0xC0, 0x7C, 0x07, 0x80, 0x78, 0x0E, 0x03, 0x78, // #####       ## ########     ####      ###     ####       #####       ####        ####       ###       ## ####
	0xF8, 0x0F, 0xFE, 0x0F, 0x01, 0x83, 0xC0, 0xFE, 0x07, 0x80, 0xFE, 0x0E, 0x03, 0xF8, // #####       ###########     ####       ##     ####      #######      ####       #######     ###       #######
	0xF8, 0x0F, 0xFE, 0x0F, 0x81, 0x83, 0x81, 0xFF, 0x03, 0x81, 0xFE, 0x06, 0x03, 0xF8, // #####       ###########     #####      ##     ###      #########      ###      ########      ##       #######
	0xF8, 0x07, 0x80, 0x0F, 0x81, 0x83, 0x83, 0xFF, 0x83, 0x01, 0xFF, 0x06, 0x01, 0xF8, // #####        ####           #####      ##     ###     ###########     ##       #########     ##        ######
	0xF8, 0x07, 0x80, 0x0F, 0x01, 0x83, 0x83, 0xFF, 0x83, 0x01, 0xFF, 0x06, 0x01, 0xF8, // #####        ####           ####       ##     ###     ###########     ##       #########     ##        ######
	0xFC, 0x03, 0x80, 0x0F, 0x01, 0x83, 0x83, 0xFF, 0x83, 0xFF, 0xFF, 0x07, 0x00, 0xF8, // ######        ###           ####       ##     ###     ###########     ##################     ###        #####
	0xFC, 0x03, 0x80, 0x0E, 0x01, 0x83, 0x83, 0xFF, 0x83, 0xFF, 0xFF, 0x07, 0x00, 0xF8, // ######        ###           ###        ##     ###     ###########     ##################     ###        #####
	0xFE, 0x03, 0xFE, 0x0E, 0x0F, 0x83, 0x81, 0xFF, 0x03, 0x01, 0xFE, 0x07, 0x80, 0xF8, // #######       #########     ###     #####     ###      #########      ##       ########      ####       #####
	0xFE, 0x03, 0xFE, 0x0E, 0x0F, 0x83, 0xC0, 0xFE, 0x07, 0x80, 0xFE, 0x0F, 0x80, 0xF8, // #######       #########     ###     #####     ####      #######      ####       #######     #####       #####
	0xFE, 0x03, 0xFE, 0x0E, 0x0F, 0x83, 0xC0, 0x7C, 0x07, 0x80, 0x78, 0x0F, 0x80, 0xF8, // #######       #########     ###     #####     ####       #####       ####        ####       #####       #####
	0xF8, 0x03, 0x80, 0x0E, 0x00, 0x03, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1E, 0x00, 0xF8, // #####         ###           ###               #####                 ######                 ####         #####
	0xF8, 0x07, 0x80, 0x0F, 0x00, 0x03, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1E, 0x01, 0xF8, // #####        ####           ####              #####                #######                 ####        ######
	0xF8, 0x0F, 0x80, 0x1F, 0x00, 0x03, 0xF8, 0x00, 0x3F, 0xE0, 0x00, 0x3E, 0x03, 0xF8, // #####       #####          #####              #######             #########               #####       #######
	0xF8, 0x1F, 0x80, 0x1F, 0x80, 0x03, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0xFE, 0x07, 0xF8, // #####      ######          ######             ########           ############           #######      ########
	0xF8, 0x3F, 0x80, 0x7F, 0xE0, 0x03, 0xFF, 0x01, 0xFF, 0xFE, 0x03, 0xFE, 0x0F, 0xF8, // #####     #######        ##########           ##########       ################       #########     #########
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, // #############################################################################################################
	0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, //  ########################################################################################################### 
	0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, //   #########################################################################################################  
	0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, //    #######################################################################################################   
};

// Bitmap sizes for scores
const uint8_t scoresWidthPixels = 109;
const uint8_t scoresHeightPixels = 37;





#endif
